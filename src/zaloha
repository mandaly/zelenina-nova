position => {
            lat = position.coords.latitude;
            lon = position.coords.longitude;
            console.log(position.coords.latitude, position.coords.longitude); 
            console.log('získal jsem souřadnice');

let queryForecast = fetch(`${forecastUrl}?APPID=${apiKey}&q=${city}&units=metric&lang=cz`);

    queryForecast
        .then(response => response.json())
        .then(displayForecast); //tuhle funkci zavolá, až bude splněná podmínka
        
    function displayForecast(data){
        let forecastEl = document.querySelector("#forecast");
        let tr = document.createElement('tr');
        let tr1 = document.createElement('tr');
        let tr2 = document.createElement('tr');
        let tr3 = document.createElement('tr');

        forecastEl.appendChild(tr);
        forecastEl.appendChild(tr1);
        forecastEl.appendChild(tr2);
        forecastEl.appendChild(tr3);

        //console.log(data.list);
        data.list.forEach(weather => {
            let tdDate = document.createElement('td');
            tdDate.innerText = weather.dt_txt;
            tr.appendChild(tdDate);

            let tdTemp = document.createElement('td');
            tdTemp.innerText = weather.main.temp + "°C";
            tr1.appendChild(tdTemp);

            let tdWet = document.createElement('td');
            tdWet.innerText = weather.weather[0].description;
            tr2.appendChild(tdWet);

            let tdIcon = document.createElement('td');
            let iconEl = document.createElement('img');
            iconEl.src = `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`;
            tr3.appendChild(tdIcon);
            tdIcon.appendChild(iconEl);
        });
    }
             
}

/*
export default function showForecast(){
    const apiKey = "c62889b42e57bd437b92dfd0d7be83bc";
    const forecastUrl = "https://api.openweathermap.org/data/2.5/forecast";
    let city = "Brno";

    let forecastEl = document.querySelector("#forecast");
    let weather = [];

    getWeather();
    showWeather();

}

async function getWeather(){
    //fetch(`${forecastUrl}?APPID=${apiKey}&q=${city}&units=metric&lang=cz`);
    let response = await fetch(`${forecastUrl}?APPID=${apiKey}&q=${city}&units=metric&lang=cz`);
    let data = await response.json();

    weather = data;

    return data.results.map(weather => {
        return {
            date = weather.dt_txt,
            temp = weather.main.temp,
            weather = weather.weather[0].description,
            img = weather.weather[0].icon,
        }
    })
}

function showWeather(){
    let html = "";
    html = weather.reduce((total, forecast) => {
        return total + `<div class="planet">
        <div class="planet__name">${weather.date}</div>
        <div class="planet_count">${weather.temp}<i class="fas fa-child"></i></div>
        </div>`;
    }, "" ) //začíná se s prázdným řetězcem
    forecastEl.innerHTML = html;
}*/